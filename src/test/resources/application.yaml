no.nav.security.jwt:
  issuer:
    tokenx:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/tokenx/.well-known/openid-configuration
      accepted_audience: meroppfolging-backend-client-id
    azureator:
      discoveryurl: http://localhost:${mock-oauth2-server.port}/azuread/.well-known/openid-configuration
      accepted_audience: meroppfolging-backend-client-id

MEROPPFOLGING_FRONTEND_CLIENT_ID: 'meroppfolging-frontend-client-id'
ESYFO_PROXY_CLIENT_ID: 'esyfo-proxy-client-id'
SYFOOPPDFGEN_URL: 'http://syfooppdfgenurl'
NAIS_CLUSTER_NAME: 'local'

token.x.client.id: "tokenx-client-id"
token.x.private.jwk: "tokenx-jwk"
token.x.token.endpoint: "https://tokenx-endpoint"

isoppfolgingstilfelle.url: "http://isoppfolgingstilfelle"
isoppfolgingstilfelle.id: "local:teamsykefravr:isoppfolgingstilfelle"

esyfovarsel.url: "http://esyfovarsel"
esyfovarsel.id: "local:team-esyfo:esyfovarsel"

dokarkiv.url: "http://dokarkiv"
dokarkiv.scope: "local:teamdokumenthandtering:dokarkiv"

pdl.url: "http://pdl"
pdl.scope: "local:pdl:pdl"

dkif.url: "http://dkif"
dkif.scope: "local:dkif:dkif"

syfobehandlendeenhet.url: "http://syfobehandlendeenhet"
syfobehandlendeenhet.id: "local:teamsykefravr:syfobehandlendeenhet"

istilgangskontroll.url: "http://istilgangskontroll"
istilgangskontroll.id: "local:teamsykefravr:istilgangskontroll"

veilarbregistrering.url: "http://veilarbregistrering"
veilarbregistrering.id: "local:paw:veilarbregistrering"
send.to.veilarbregistrering.toggle: "true"

kafka.brokers: ${spring.embedded.kafka.brokers}
kafka.truststore.path: /truststore
kafka.keystore.path: /keystore
kafka.credstore.password: /credstore/password
kafka.schema.registry.user: "kafka.schema.registry.user"
kafka.schema.registry.password: "kafka.schema.registry.password"
kafka.schema.registry: "kafka.schema.registry"

toggle.pilot: "true"

azure:
  app:
    client:
      id: "client-id"
      secret: "client-secret"
  openid:
    config:
      token:
        endpoint: "https://token-endpoint"

spring:
  profiles:
    active: test
  datasource:
    url: jdbc:postgresql://localhost:5432/testdb
    username: test
    password: test
  flyway:
    enabled: true
    locations: classpath:db/migration
  kafka:
    consumer:
      auto-offset-reset: earliest
      group-id: test
    bootstrap-servers: ${spring.embedded.kafka.brokers}
